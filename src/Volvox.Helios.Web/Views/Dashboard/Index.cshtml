@model Volvox.Helios.Web.ViewModels.Dashboard.DashboardIndexViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<partial name="./Partials/_DashboardHeader" model="@Model.UserGuilds.Select(g => g.Guild)" />
<div class="accordion" id="serverAccordion">
    @for (var i = 0; i < Model.UserGuilds.Count; i++)
    {
        var uG = Model.UserGuilds[i];
        <div class="card mt-4">
            <div class="card-img-top d-flex align-items-center bg-gray pt-2 pb-2 dashboard-guild-header" id="s-@i-@uG.Guild.Name">
                <img class="card-img-top ml-3 dashboard-guild-image" src="@uG.Guild.ImageUrl" alt="@uG.Guild.Name">
                <h5 class="col mb-0 card-title text-volvox">@uG.Guild.Name</h5>
                <a href="#" onclick="toggleAccBtn(event);" class="text-volvox mr-3" data-toggle="collapse" data-target="#s-@i" aria-expanded="true" aria-controls="s-@i">
                    <i class="fas fa-toggle-on d-block"></i>
                </a>
                @if (uG.Guild.Details.IsBotInGuild)
                {
                    <a class="text-volvox mr-3" asp-action="Details" asp-route-guildId="@uG.Guild.Id">
                        <i class="fas fa-info-circle"></i>
                    </a>
                    <a class="text-volvox mr-3" asp-controller="Settings" asp-action="Index" asp-route-guildId="@uG.Guild.Id">
                        <i class="fas fa-cog"></i>
                    </a>
                }
            </div>
            <div class="collapse show" id="s-@i" aria-labelledby="s-@i-@uG.Guild.Name">
                <div class="card-body">
                    <p class="card-text">
                        <partial name="./Partials/_DashboardCard" model="@uG.Guild" />
                    </p>
                </div>
            </div>
        </div>
    }
    
</div>
<form action="/" method="post">
    <select class="d-none" id="guildIds" name="" colOrder>
        @for (var i = 0; i < Model.UserGuilds.Count; i++)
        {
            var uG = Model.UserGuilds[i];
            <option value="@uG.Guild.Id"></option>
        }
    </select>
</form>
@section Scripts {
    <script>

        var draggingCard = null;
        $('body').mousemove((e) => {
            if (draggingCard != null && $('.dashboard-guild-header').find(draggingCard).length > 0) {
                var card = draggingCard.closest('.card');
                card.offset({
                    left: e.pageX - (card.width() / 2),
                    top: e.pageY - 10
                }).css('zIndex', 1).addClass('dragging');
                $('body').css('user-select', 'none');
                $('.dashboard-guild-header').closest('.card:not(".dragging")').addClass('blur');
            }
        });

        $('body').mousedown((e) => {
            var target = $(e.target);
            if (target.is('h5'))
                draggingCard = target;
        }).mouseup(() => {
            if (draggingCard != null && $('.card').hasClass('dragging')) {
                var result = {};
                $('.card:not(".dragging")').each((i, el) => {
                    if (!result.val || Math.abs($(el).offset().top - draggingCard.offset().top) < Math.abs(result.val - draggingCard.offset().top)) {
                        result = { val: $(el).offset().top, el: $(el) };
                    }
                });

                if (draggingCard.offset().top > result.val)
                    draggingCard.closest('.card').insertAfter($(result.el).closest('.card'));
                else
                    draggingCard.closest('.card').insertBefore($(result.el).closest('.card'));

                $('.dashboard-guild-header').closest('.card').removeClass('dragging blur').css({ zIndex: 0, left: 0, top: 0 });
                $('body').css('user-select', 'auto');
            }
            draggingCard = null;
        });

        function toggleAccBtn(e) {
            const el = $(e.target);
            if (el.hasClass('fa-toggle-on'))
                el.removeClass('fa-toggle-on').addClass('fa-toggle-off');
            else
                el.removeClass('fa-toggle-off').addClass('fa-toggle-on');
        }

        function toggleFavouriteBtn(e) {
            const el = $(e.target).find('i');
            if (el.hasClass('fas'))
                el.removeClass('fas').addClass('far');
            else
                el.removeClass('far').addClass('fas');
        }
    </script>
}