@model Volvox.Helios.Web.ViewModels.Poll.ViewPollsViewModel
@{
    ViewData["Title"] = "View Polls";
}

<div class="row">
    <div class="col-sm-11">
        <h2>My Polls</h2>
    </div>

    <div class="col-sm-1">
        <button class="btn btn-volvox-outline" id="NewPoll">New</button>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-12">
        <div class="form-group">
            <div id="poll"></div>
        </div>
    </div>
    <div class="col-md-12 col-lg-6">
        <div class="col-12 border border-gray2 rounded pt-2 h-100">
            <h5 id="Title" class="mb-4">Hey, how cool is this example?</h5>
            <div class="form-group">
                <label asp-for="Options" class="font-size-small"></label>
                <ul class="list-group" id="Options">
                    <li class="list-group-item poll-item">
                        Not cool
                        <div class="vote-count valign">5</div>
                    </li>
                    <li class="list-group-item poll-item">
                        Its alright...:
                        <div class="vote-count valign">44</div>
                    </li>
                    <li class="list-group-item poll-item">
                        Pretty cool:
                        <div class="vote-count valign">223</div>
                    </li>
                    <li class="list-group-item poll-item">
                        Top notch:
                        <div class="vote-count valign">304</div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-12 col-lg-6 mt-lg-0 mt-4">
        <div class="col-12 border border-gray2 rounded pt-2 h-100">
            @*@(Html.DevExtreme().PieChart()
                    .ID("pieChart")
                    .DataSource(new[]
                    {
                        new { Label = "Not cool", Votes = 5 },
                        new { Label = "Its alright", Votes = 44 },
                        new { Label = "Pretty cool", Votes = 223 },
                        new { Label = "Top notch", Votes = 304 }
                    })
                    .CommonSeriesSettings(c => c.ArgumentField("Label"))
                    .Series(series =>
                    {
                        series.Add().ValueField("Label");
                        series.Add().ValueField("Votes");
                    })
            )*@
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Populate selected polls data
        function updatePoll(e) {
            var Ids = e.value.split('-')
            var messageId = Ids[0];
            var channelId = Ids[1];
            $.when(GetPollDetails(channelId, messageId)).done(function (response) {
                $("#Title").text(RemoveLeadingEmoticon(response.Title));
                $("#Options").empty();

                $.each(response.Options, function (i, option) {
                    // Remove 1 from option count as the bot will add one vote to all options, to display them as buttons.
                    $("#Options").append(
                        $('<li class="list-group-item poll-item"></li>').html(RemoveLeadingEmoticon(option.Option) + "<div class=\"vote-count valign\">" + parseInt(option.VoteCount - 1) + "</div>")
                    );
                })
            });
        }

        function GetPollDetails(channelId, messageId) {
            const url = `/api/GetPollData?channelId=${channelId}&messageId=${messageId}`;
            return $.ajax({
                type: 'GET',
                cache: false,
                url: url
            }).done(function (response) {
                return response;
            });
        }

        function RemoveLeadingEmoticon(text) {
            if (!text) return "";
            return text.trim().substr(text.indexOf(" ") + 1)
        }

        // Direct user to new poll form
        $("#NewPoll").on('click', function () {
            window.location = `${window.location.href}/newpoll`
        });
    </script>
    <script>
        $(function () {
            $("#poll").dxSelectBox({
                dataSource: [
                    "HD Video Player",
                    "SuperHD Video Player",
                    "SuperPlasma 50",
                    "SuperLED 50",
                    "SuperLED 42",
                    "SuperLCD 55",
                    "SuperLCD 42",
                    "SuperPlasma 65",
                    "SuperLCD 70",
                    "Projector Plus",
                    "Projector PlusHT",
                    "ExcelRemote IR",
                    "ExcelRemote BT",
                    "ExcelRemote IP"
                ]
            });
        });
    </script>
}
